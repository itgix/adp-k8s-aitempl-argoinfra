ingress:
  enabled: true
  annotations:
    alb.ingress.kubernetes.io/actions.response-503: |
      {"type":"fixed-response","fixedResponseConfig":{"contentType":"text/plain","statusCode":"503","messageBody":"503 Service Unavailable"}}
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/group.name: public
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200-404
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  dynamic:
    enabled: true
    nsPrefix: false
    tls: false
    baseDomain: ragdemo.itgix.eu

ingressClassName: "alb"

image: 722377226063.dkr.ecr.eu-west-1.amazonaws.com/rag-demo:v22

resources:
  requests:
    memory: "3052Mi"
    cpu: "100m"
    #nvidia.com/gpu: 1  # Request 1 GPU
  limits:
    memory: "3052Mi"
    cpu: "2"
    #nvidia.com/gpu: 1  # Limit to 1 GPU

env:
- name: QDRANT_URL
  value: "http://qdrant-vectordb.qdrant:6333/"
- name: QDRANT_API_KEY
  value: "superSecretApiKeyHere"
- name: BUCKET_NAME
  value: your-bucket-name-here 
- name: FRONTEND_DOMAIN
  value: "http://your-frontend-domain-here"
- name: AI_MODEL
  value: "AI-MODEL-NAME"


ragdemoCX: true

ragdemoCXimage: 722377226063.dkr.ecr.eu-west-1.amazonaws.com/rag-demo:ver11

ragdemoCXresources:
  requests:
    memory: "3052Mi"
    cpu: "100m"
    #nvidia.com/gpu: 1  # Request 1 GPU
  limits:
    memory: "3052Mi"
    cpu: "2"
    #nvidia.com/gpu: 1  # Limit to 1 GPU

ragdemoCXenv:
- name: BACKEND_URL
  value: "http://ragdemo-t0805.itgix.eu"

ragdemoCXvariables:
  wsUrl: "ws://ragdemo-t0805.itgix.eu/ws"
  uploadUrl: "http://ragdemo-t0805.itgix.eu/uploadfiles"